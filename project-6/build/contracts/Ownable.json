{
  "contractName": "Ownable",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "TransferOwnership",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_owner()\":{\"notice\":\"Look up the address of the owner\"},\"constructor\":{\"notice\":\"Assign the contract to an owner\"},\"isOwner()\":{\"notice\":\"Check if the calling address is the owner of the contract\"},\"renounceOwnership()\":{\"notice\":\"Define a function to renounce ownerhip\"},\"transferOwnership(address)\":{\"notice\":\"Define a public function to transfer ownership\"}},\"notice\":\"Provides basic authorization control\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/coffeecore/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/coffeecore/Ownable.sol\":{\"keccak256\":\"0xafaad3353f4227221d26e63443a0910ad187be62142b3291cdb847b77a1bc26e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22eaa79a2c1f952849bf6dd5b2bad12c9ed8ab25d340ac5393b0a994fe30bd50\",\"dweb:/ipfs/QmPPfUy6tXDduXcraUhayD6bS3vQQFMbd68U24wrgxX7w7\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a36105cc806100db6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638f32d59b1461005b578063b2bdfa7b14610079578063f2fde38b14610097575b600080fd5b6100596100b3565b005b6100636101b8565b60405161007091906104d5565b60405180910390f35b61008161020f565b60405161008e91906104ba565b60405180910390f35b6100b160048036038101906100ac91906103cd565b610238565b005b6100bb6101b8565b6100fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f190610510565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102406101b8565b61027f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027690610510565b60405180910390fd5b6102888161028b565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f2906104f0565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506103c78161057f565b92915050565b6000602082840312156103df57600080fd5b60006103ed848285016103b8565b91505092915050565b6103ff81610541565b82525050565b61040e81610553565b82525050565b6000610421601783610530565b91507f496e76616c6964206164647265737320656e74657265640000000000000000006000830152602082019050919050565b6000610461602b83610530565b91507f546869732063616e206f6e6c7920626520646f6e652062792074686520636f6e60008301527f7472616374206f776e65720000000000000000000000000000000000000000006020830152604082019050919050565b60006020820190506104cf60008301846103f6565b92915050565b60006020820190506104ea6000830184610405565b92915050565b6000602082019050818103600083015261050981610414565b9050919050565b6000602082019050818103600083015261052981610454565b9050919050565b600082825260208201905092915050565b600061054c8261055f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61058881610541565b811461059357600080fd5b5056fea26469706673582212207d5cd14399711f32322dbb6f85b4667007d0d84f6eea4a2a08dc57af8177572f64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638f32d59b1461005b578063b2bdfa7b14610079578063f2fde38b14610097575b600080fd5b6100596100b3565b005b6100636101b8565b60405161007091906104d5565b60405180910390f35b61008161020f565b60405161008e91906104ba565b60405180910390f35b6100b160048036038101906100ac91906103cd565b610238565b005b6100bb6101b8565b6100fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f190610510565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102406101b8565b61027f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027690610510565b60405180910390fd5b6102888161028b565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f2906104f0565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506103c78161057f565b92915050565b6000602082840312156103df57600080fd5b60006103ed848285016103b8565b91505092915050565b6103ff81610541565b82525050565b61040e81610553565b82525050565b6000610421601783610530565b91507f496e76616c6964206164647265737320656e74657265640000000000000000006000830152602082019050919050565b6000610461602b83610530565b91507f546869732063616e206f6e6c7920626520646f6e652062792074686520636f6e60008301527f7472616374206f776e65720000000000000000000000000000000000000000006020830152604082019050919050565b60006020820190506104cf60008301846103f6565b92915050565b60006020820190506104ea6000830184610405565b92915050565b6000602082019050818103600083015261050981610414565b9050919050565b6000602082019050818103600083015261052981610454565b9050919050565b600082825260208201905092915050565b600061054c8261055f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61058881610541565b811461059357600080fd5b5056fea26469706673582212207d5cd14399711f32322dbb6f85b4667007d0d84f6eea4a2a08dc57af8177572f64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3291:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:8"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:8",
                "type": ""
              }
            ],
            "src": "7:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "276:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "369:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:8",
                "type": ""
              }
            ],
            "src": "152:262:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "485:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "502:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "525:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "507:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "495:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:37:8"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "480:3:8",
                "type": ""
              }
            ],
            "src": "420:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "603:50:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "620:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "640:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "625:14:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "625:21:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "613:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "613:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "613:34:8"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "598:3:8",
                "type": ""
              }
            ],
            "src": "544:109:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "805:175:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "815:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "881:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "886:2:8",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "822:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "822:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "815:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "910:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "915:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "906:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "906:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "919:25:8",
                        "type": "",
                        "value": "Invalid address entered"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "899:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "899:46:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "899:46:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "955:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "966:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "971:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "962:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "955:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8d66f12edc6c988ddb8a45e7267877bfd34cef0fa2e642e1e2b333c0529f9c6f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "793:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "801:3:8",
                "type": ""
              }
            ],
            "src": "659:321:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1132:229:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1142:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1208:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1213:2:8",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1149:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1149:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1142:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1237:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1242:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1233:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1233:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1246:34:8",
                        "type": "",
                        "value": "This can only be done by the con"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1226:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1226:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1226:55:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1302:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1307:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1298:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1298:12:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1312:13:8",
                        "type": "",
                        "value": "tract owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1291:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1291:35:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1291:35:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1336:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1347:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1352:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1343:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1343:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1336:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e77cc3445a1aacb7a21b4f3a9235091792babc1255364f0de54b07d81bc1e385_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1120:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1128:3:8",
                "type": ""
              }
            ],
            "src": "986:375:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1465:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1475:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1487:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1498:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1483:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1483:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1475:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1555:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1568:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1579:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1564:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1564:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1511:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1511:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1511:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1437:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1449:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1460:4:8",
                "type": ""
              }
            ],
            "src": "1367:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1687:118:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1697:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1709:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1720:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1705:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1705:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1697:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1771:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1784:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1795:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1780:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1780:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1733:37:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1733:65:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1733:65:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1659:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1671:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1682:4:8",
                "type": ""
              }
            ],
            "src": "1595:210:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1982:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1992:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2004:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2015:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2000:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2000:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1992:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2039:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2050:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2035:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2035:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2058:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2064:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2054:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2054:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2028:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2028:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2028:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2084:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2218:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8d66f12edc6c988ddb8a45e7267877bfd34cef0fa2e642e1e2b333c0529f9c6f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2092:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2092:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2084:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8d66f12edc6c988ddb8a45e7267877bfd34cef0fa2e642e1e2b333c0529f9c6f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1962:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1977:4:8",
                "type": ""
              }
            ],
            "src": "1811:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2407:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2417:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2429:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2440:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2425:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2425:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2417:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2464:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2475:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2460:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2460:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2483:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2489:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2479:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2479:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2453:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2453:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2453:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2509:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2643:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e77cc3445a1aacb7a21b4f3a9235091792babc1255364f0de54b07d81bc1e385_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2517:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2517:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2509:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e77cc3445a1aacb7a21b4f3a9235091792babc1255364f0de54b07d81bc1e385__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2387:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2402:4:8",
                "type": ""
              }
            ],
            "src": "2236:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2757:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2774:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2779:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2767:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2767:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2767:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2795:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2814:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2819:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2810:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2810:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2795:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2729:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2734:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2745:11:8",
                "type": ""
              }
            ],
            "src": "2661:169:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2881:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2891:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2920:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2902:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2902:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2891:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2863:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2873:7:8",
                "type": ""
              }
            ],
            "src": "2836:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2980:48:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2990:32:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3015:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3008:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3008:13:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3001:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3001:21:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2990:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2962:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2972:7:8",
                "type": ""
              }
            ],
            "src": "2938:90:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3079:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3089:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3104:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3111:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3100:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3100:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3089:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3061:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3071:7:8",
                "type": ""
              }
            ],
            "src": "3034:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3209:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3266:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3275:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3278:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3268:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3268:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3268:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3232:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3257:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3239:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3239:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3229:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3229:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3222:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3222:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "3219:2:8"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3202:5:8",
                "type": ""
              }
            ],
            "src": "3166:122:8"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_8d66f12edc6c988ddb8a45e7267877bfd34cef0fa2e642e1e2b333c0529f9c6f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n\n        mstore(add(pos, 0), \"Invalid address entered\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e77cc3445a1aacb7a21b4f3a9235091792babc1255364f0de54b07d81bc1e385_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n\n        mstore(add(pos, 0), \"This can only be done by the con\")\n\n        mstore(add(pos, 32), \"tract owner\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d66f12edc6c988ddb8a45e7267877bfd34cef0fa2e642e1e2b333c0529f9c6f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d66f12edc6c988ddb8a45e7267877bfd34cef0fa2e642e1e2b333c0529f9c6f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e77cc3445a1aacb7a21b4f3a9235091792babc1255364f0de54b07d81bc1e385__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e77cc3445a1aacb7a21b4f3a9235091792babc1255364f0de54b07d81bc1e385_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "99:1409:7:-:0;;;299:109;;;;;;;;;;336:10;324:9;;:22;;;;;;;;;;;;;;;;;;391:9;;;;;;;;;;361:40;;387:1;361:40;;;;;;;;;;;;99:1409;;;;;;",
  "deployedSourceMap": "99:1409:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;921:140;;;:::i;:::-;;775:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;455:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1122:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;921:140;628:9;:7;:9::i;:::-;620:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1019:1:::1;982:40;;1000:9;::::0;::::1;;;;;;;;982:40;;;;;;;;;;;;1052:1;1032:9:::0;::::1;:22;;;;;;;;;;;;;;;;;;921:140::o:0;775:93::-;815:4;852:9;;;;;;;;;;;838:23;;:10;:23;;;831:30;;775:93;:::o;455:81::-;494:7;520:9;;;;;;;;;;;513:16;;455:81;:::o;1122:107::-;628:9;:7;:9::i;:::-;620:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1194:28:::1;1213:8;1194:18;:28::i;:::-;1122:107:::0;:::o;1293:213::-;1386:1;1366:22;;:8;:22;;;;1358:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1460:8;1431:38;;1449:9;;;;;;;;;;1431:38;;;;;;;;;;;;1491:8;1479:9;;:20;;;;;;;;;;;;;;;;;;1293:213;:::o;7:139:8:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:109::-;625:21;640:5;625:21;:::i;:::-;620:3;613:34;603:50;;:::o;659:321::-;;822:67;886:2;881:3;822:67;:::i;:::-;815:74;;919:25;915:1;910:3;906:11;899:46;971:2;966:3;962:12;955:19;;805:175;;;:::o;986:375::-;;1149:67;1213:2;1208:3;1149:67;:::i;:::-;1142:74;;1246:34;1242:1;1237:3;1233:11;1226:55;1312:13;1307:2;1302:3;1298:12;1291:35;1352:2;1347:3;1343:12;1336:19;;1132:229;;;:::o;1367:222::-;;1498:2;1487:9;1483:18;1475:26;;1511:71;1579:1;1568:9;1564:17;1555:6;1511:71;:::i;:::-;1465:124;;;;:::o;1595:210::-;;1720:2;1709:9;1705:18;1697:26;;1733:65;1795:1;1784:9;1780:17;1771:6;1733:65;:::i;:::-;1687:118;;;;:::o;1811:419::-;;2015:2;2004:9;2000:18;1992:26;;2064:9;2058:4;2054:20;2050:1;2039:9;2035:17;2028:47;2092:131;2218:4;2092:131;:::i;:::-;2084:139;;1982:248;;;:::o;2236:419::-;;2440:2;2429:9;2425:18;2417:26;;2489:9;2483:4;2479:20;2475:1;2464:9;2460:17;2453:47;2517:131;2643:4;2517:131;:::i;:::-;2509:139;;2407:248;;;:::o;2661:169::-;;2779:6;2774:3;2767:19;2819:4;2814:3;2810:14;2795:29;;2757:73;;;;:::o;2836:96::-;;2902:24;2920:5;2902:24;:::i;:::-;2891:35;;2881:51;;;:::o;2938:90::-;;3015:5;3008:13;3001:21;2990:32;;2980:48;;;:::o;3034:126::-;;3111:42;3104:5;3100:54;3089:65;;3079:81;;;:::o;3166:122::-;3239:24;3257:5;3239:24;:::i;:::-;3232:5;3229:35;3219:2;;3278:1;3275;3268:12;3219:2;3209:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\n/// Provides basic authorization control\ncontract Ownable {\n    address private origOwner;\n\n    // Define an Event\n    event TransferOwnership(address indexed oldOwner, address indexed newOwner);\n\n    /// Assign the contract to an owner\n    constructor () {\n        origOwner = msg.sender;\n        emit TransferOwnership(address(0), origOwner);\n    }\n\n    /// Look up the address of the owner\n    function _owner() public view returns (address) {\n        return origOwner;\n    }\n\n    /// Define a function modifier 'onlyOwner'\n    modifier onlyOwner() {\n        require(isOwner(), \"This can only be done by the contract owner\");\n        _;\n    }\n\n    /// Check if the calling address is the owner of the contract\n    function isOwner() public view returns (bool) {\n        return msg.sender == origOwner;\n    }\n\n    /// Define a function to renounce ownerhip\n    function renounceOwnership() public onlyOwner {\n        emit TransferOwnership(origOwner, address(0));\n        origOwner = address(0);\n    }\n\n    /// Define a public function to transfer ownership\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /// Define an internal function to transfer ownership\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0), \"Invalid address entered\");\n        emit TransferOwnership(origOwner, newOwner);\n        origOwner = newOwner;\n    }\n}\n",
  "sourcePath": "H:\\Worx\\Blockchain\\Udacity\\Project 3 - Supply Chain\\supplyChain\\project-6\\contracts\\coffeecore\\Ownable.sol",
  "ast": {
    "absolutePath": "project:/contracts/coffeecore/Ownable.sol",
    "exportedSymbols": {
      "Ownable": [
        1579
      ]
    },
    "id": 1580,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1458,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:7"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1459,
          "nodeType": "StructuredDocumentation",
          "src": "58:41:7",
          "text": "Provides basic authorization control"
        },
        "fullyImplemented": true,
        "id": 1579,
        "linearizedBaseContracts": [
          1579
        ],
        "name": "Ownable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1461,
            "mutability": "mutable",
            "name": "origOwner",
            "nodeType": "VariableDeclaration",
            "scope": 1579,
            "src": "122:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1460,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "122:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 1467,
            "name": "TransferOwnership",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1463,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oldOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1467,
                  "src": "201:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "201:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1465,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1467,
                  "src": "227:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "200:52:7"
            },
            "src": "177:76:7"
          },
          {
            "body": {
              "id": 1484,
              "nodeType": "Block",
              "src": "314:94:7",
              "statements": [
                {
                  "expression": {
                    "id": 1474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1471,
                      "name": "origOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1461,
                      "src": "324:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1472,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "336:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "336:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "324:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1475,
                  "nodeType": "ExpressionStatement",
                  "src": "324:22:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "387:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "379:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1477,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "379:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "379:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1481,
                        "name": "origOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1461,
                        "src": "391:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1476,
                      "name": "TransferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "361:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "361:40:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1483,
                  "nodeType": "EmitStatement",
                  "src": "356:45:7"
                }
              ]
            },
            "documentation": {
              "id": 1468,
              "nodeType": "StructuredDocumentation",
              "src": "259:35:7",
              "text": "Assign the contract to an owner"
            },
            "id": 1485,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "311:2:7"
            },
            "returnParameters": {
              "id": 1470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "314:0:7"
            },
            "scope": 1579,
            "src": "299:109:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1493,
              "nodeType": "Block",
              "src": "503:33:7",
              "statements": [
                {
                  "expression": {
                    "id": 1491,
                    "name": "origOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1461,
                    "src": "520:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1490,
                  "id": 1492,
                  "nodeType": "Return",
                  "src": "513:16:7"
                }
              ]
            },
            "documentation": {
              "id": 1486,
              "nodeType": "StructuredDocumentation",
              "src": "414:36:7",
              "text": "Look up the address of the owner"
            },
            "functionSelector": "b2bdfa7b",
            "id": 1494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_owner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:2:7"
            },
            "returnParameters": {
              "id": 1490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1489,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1494,
                  "src": "494:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "493:9:7"
            },
            "scope": 1579,
            "src": "455:81:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1504,
              "nodeType": "Block",
              "src": "610:93:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1498,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1517,
                          "src": "628:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "628:9:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732063616e206f6e6c7920626520646f6e652062792074686520636f6e7472616374206f776e6572",
                        "id": 1500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "639:45:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e77cc3445a1aacb7a21b4f3a9235091792babc1255364f0de54b07d81bc1e385",
                          "typeString": "literal_string \"This can only be done by the contract owner\""
                        },
                        "value": "This can only be done by the contract owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e77cc3445a1aacb7a21b4f3a9235091792babc1255364f0de54b07d81bc1e385",
                          "typeString": "literal_string \"This can only be done by the contract owner\""
                        }
                      ],
                      "id": 1497,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "620:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "620:65:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1502,
                  "nodeType": "ExpressionStatement",
                  "src": "620:65:7"
                },
                {
                  "id": 1503,
                  "nodeType": "PlaceholderStatement",
                  "src": "695:1:7"
                }
              ]
            },
            "documentation": {
              "id": 1495,
              "nodeType": "StructuredDocumentation",
              "src": "542:42:7",
              "text": "Define a function modifier 'onlyOwner'"
            },
            "id": 1505,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "607:2:7"
            },
            "src": "589:114:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1516,
              "nodeType": "Block",
              "src": "821:47:7",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1511,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "838:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "838:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1513,
                      "name": "origOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1461,
                      "src": "852:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "838:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1510,
                  "id": 1515,
                  "nodeType": "Return",
                  "src": "831:30:7"
                }
              ]
            },
            "documentation": {
              "id": 1506,
              "nodeType": "StructuredDocumentation",
              "src": "709:61:7",
              "text": "Check if the calling address is the owner of the contract"
            },
            "functionSelector": "8f32d59b",
            "id": 1517,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "791:2:7"
            },
            "returnParameters": {
              "id": 1510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1509,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1517,
                  "src": "815:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1508,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "814:6:7"
            },
            "scope": 1579,
            "src": "775:93:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1538,
              "nodeType": "Block",
              "src": "967:94:7",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1524,
                        "name": "origOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1461,
                        "src": "1000:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1019:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1011:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1525,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1011:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1011:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1523,
                      "name": "TransferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "982:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "982:40:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1530,
                  "nodeType": "EmitStatement",
                  "src": "977:45:7"
                },
                {
                  "expression": {
                    "id": 1536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1531,
                      "name": "origOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1461,
                      "src": "1032:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1052:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1044:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1532,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1044:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1044:10:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1032:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1537,
                  "nodeType": "ExpressionStatement",
                  "src": "1032:22:7"
                }
              ]
            },
            "documentation": {
              "id": 1518,
              "nodeType": "StructuredDocumentation",
              "src": "874:42:7",
              "text": "Define a function to renounce ownerhip"
            },
            "functionSelector": "715018a6",
            "id": 1539,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1521,
                "modifierName": {
                  "id": 1520,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1505,
                  "src": "957:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "957:9:7"
              }
            ],
            "name": "renounceOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:2:7"
            },
            "returnParameters": {
              "id": 1522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "967:0:7"
            },
            "scope": 1579,
            "src": "921:140:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1551,
              "nodeType": "Block",
              "src": "1184:45:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1548,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1542,
                        "src": "1213:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1547,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1578,
                      "src": "1194:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1194:28:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1550,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:28:7"
                }
              ]
            },
            "documentation": {
              "id": 1540,
              "nodeType": "StructuredDocumentation",
              "src": "1067:50:7",
              "text": "Define a public function to transfer ownership"
            },
            "functionSelector": "f2fde38b",
            "id": 1552,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1545,
                "modifierName": {
                  "id": 1544,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1505,
                  "src": "1174:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1174:9:7"
              }
            ],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1542,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1552,
                  "src": "1149:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1149:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1148:18:7"
            },
            "returnParameters": {
              "id": 1546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1184:0:7"
            },
            "scope": 1579,
            "src": "1122:107:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1577,
              "nodeType": "Block",
              "src": "1348:158:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1559,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1555,
                          "src": "1366:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1386:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1378:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1560,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1378:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1378:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1366:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206164647265737320656e7465726564",
                        "id": 1565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1390:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d66f12edc6c988ddb8a45e7267877bfd34cef0fa2e642e1e2b333c0529f9c6f",
                          "typeString": "literal_string \"Invalid address entered\""
                        },
                        "value": "Invalid address entered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d66f12edc6c988ddb8a45e7267877bfd34cef0fa2e642e1e2b333c0529f9c6f",
                          "typeString": "literal_string \"Invalid address entered\""
                        }
                      ],
                      "id": 1558,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1358:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1358:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1567,
                  "nodeType": "ExpressionStatement",
                  "src": "1358:58:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1569,
                        "name": "origOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1461,
                        "src": "1449:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1570,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1555,
                        "src": "1460:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1568,
                      "name": "TransferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "1431:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1431:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1572,
                  "nodeType": "EmitStatement",
                  "src": "1426:43:7"
                },
                {
                  "expression": {
                    "id": 1575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1573,
                      "name": "origOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1461,
                      "src": "1479:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1574,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1555,
                      "src": "1491:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1479:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1576,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:20:7"
                }
              ]
            },
            "documentation": {
              "id": 1553,
              "nodeType": "StructuredDocumentation",
              "src": "1235:53:7",
              "text": "Define an internal function to transfer ownership"
            },
            "id": 1578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1555,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1578,
                  "src": "1321:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1320:18:7"
            },
            "returnParameters": {
              "id": 1557,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1348:0:7"
            },
            "scope": 1579,
            "src": "1293:213:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1580,
        "src": "99:1409:7"
      }
    ],
    "src": "32:1477:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.9",
  "updatedAt": "2022-08-30T09:36:32.577Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "_owner()": {
        "notice": "Look up the address of the owner"
      },
      "constructor": {
        "notice": "Assign the contract to an owner"
      },
      "isOwner()": {
        "notice": "Check if the calling address is the owner of the contract"
      },
      "renounceOwnership()": {
        "notice": "Define a function to renounce ownerhip"
      },
      "transferOwnership(address)": {
        "notice": "Define a public function to transfer ownership"
      }
    },
    "notice": "Provides basic authorization control",
    "version": 1
  }
}